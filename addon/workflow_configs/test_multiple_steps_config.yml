workflow_name: "Vocabulary Extraction and Multi-step Processing"

user_inputs: [notes_url, deckname]

# 1) **scrape notes from online docs (google docs, notion, obsius)**
scrape_notes:
  - url: "{notes_url}"
    output: scraped_notes_output  # the output name for the scraped notes

# 2) **Process Notes (Multiple Steps)**
process_notes_to_cards:
  - step: "Extract key sentences"
    model: "openai/gpt-4o-mini"
    chunk_size: 4000
    input:
      - scraped_notes_output
    attach_format_reminder: true # if true will append a format reminder to the prompt ensuring api outputs correct format
    output: extracted_keywords  # Intermediate output
    prompt: |
      Extract keywords from the following document. The document contains vocabulary words or short phrases in Mandarin. For each keyword, provide its pinyin and English translation. Remove any irrelevant information or duplicates. If there are multiple valid translations for a keyword, choose the most common one.

      Output in the following format:
      [
        {"keyword": "word1", "pinyin": "pinyin1", "translation": "translation1"},
        {"keyword": "word2", "pinyin": "pinyin2", "translation": "translation2"},
        ...
      ]

      Document:
      {scraped_notes_output}   
 
    
  - step: "Generate flashcards"
    model: "openai/gpt-4o-mini"
    chunk_size: 4000
    input:
      - extracted_keywords  # Input is the extracted keywords
    attach_format_reminder: false 
    output: flashcards  # Final output
    output_fields:
      - sentence
      - translation
      - keywords
    prompt: |
      prompt: |
      For each group of related keywords below, generate an example sentence in Mandarin that naturally uses one or more of the keywords in a contextually appropriate way. If the sentence requires additional Mandarin keywords for clarity, include them as well, provided they aren't commonly known by an upper-intermediate learner.

      Additionally, list the keywords in the format "keyword pinyin translation," using `<br>` as a separator if multiple keywords are included.

      **Important**: The output must be in JSON format where each dictionary has exactly these three keys: "sentence," "translation," and "keywords." Do not change these keys.

      Format the output exactly like this:
      [
        {"sentence": "Example sentence in Mandarin.", "translation": "English translation of the sentence.", "keywords": "keyword1 pinyin1 translation1<br>keyword2 pinyin2 translation2"},
        {"sentence": "Another example sentence in Mandarin.", "translation": "English translation of this sentence.", "keywords": "keywordA pinyinA translationA<br>keywordB pinyinB translationB"},
        ...
      ]

      Keywords:
      {extracted_keywords} 
   
#  3)  **Add Cards to Anki**
add_cards_to_anki:
  flashcards_data: flashcards  # Input is the list of flashcards
  deck_name: "{deckname}"
  card_template:
    template_name: "notes2flash basic note type" # 'notes2flash basic note type' is a default note type included in addon found in ./included_note_types/
    front: "{sentence}"
    back: "{translation}<br><br>{keywords}"